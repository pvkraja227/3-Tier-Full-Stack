pipeline { 
    agent any

       	
    environment {
        SONAR_HOME= tool 'sonar-scanner'
    }
    
    tools {
        nodejs 'node21'
    }

    stages {

        
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/pvkraja227/3-Tier-Full-Stack.git'        
            }
        }
        
	    stage('Install Package Dependencies') {
            steps {
                sh "npm install"
            }
        }

        stage('Tests') {
            steps {
                sh "npm test"
            }
        }
        
        stage('Trivy FS Scan') {
            steps {
                sh "trivy fs --format table -o fs.html ."
            }
        }

        stage('SonarQube Analysis') {
            steps {
		withSonarQubeEnv('sonar') {
                sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=App -Dsonar.projectKey=App"
                }
            }
        }
        
        stage('Docker Build & Tag') {
            steps {
                script {
                withDockerRegistry(credentialsId: 'docker-cred') {
                
                sh "docker build -t rajapvk23/app-3tier:latest ."    
                }
                }
            }
        }
        
        stage('Trivy Image Scan') {
            steps {
                sh "trivy image --format table -o image.html rajapvk23/app-3tier:latest"
            }
        }
        
        stage('Docker Push') {
            steps {
                script {
                withDockerRegistry(credentialsId: 'docker-cred') {
                
                sh "docker push rajapvk23/app-3tier:latest"    
                }
                }
            }
        }
	
        stage('Deploy To EKS') {
            steps {
                withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'my-eks22', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://007E019DA631264E8948F57DCBAF943E.gr7.ap-south-1.eks.amazonaws.com']]) {
                sh "kubectl apply -f Manifests/"
                sleep 10
            }
            }
        }
        
        stage('Verify the Deployment') {
            steps {
                withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'my-eks22', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://007E019DA631264E8948F57DCBAF943E.gr7.ap-south-1.eks.amazonaws.com']]) {
                    sh "kubectl get pods -n webapps"
                    sh "kubectl get svc -n webapps"
                }
            }
        }
    }
}
